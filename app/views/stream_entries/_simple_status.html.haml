.status
  .status__info
    = link_to TagManager.instance.url_for(status), class: 'status__relative-time u-url u-uid', target: stream_link_target, rel: 'noopener' do
      %time.time-ago{ datetime: status.created_at.iso8601, title: l(status.created_at) }= l(status.created_at)
    %data.dt-published{ value: status.created_at.to_time.iso8601 }

    = link_to TagManager.instance.url_for(status.account), class: 'status__display-name p-author h-card', target: stream_link_target, rel: 'noopener' do
      .status__avatar
        %div
          = image_tag status.account.avatar(:original), width: 48, height: 48, alt: '', class: 'u-photo account__avatar'
      %span.display-name
        %bdi
          %strong.display-name__html.p-name.emojify= display_name(status.account, custom_emojify: true)
        %span.display-name__account
          = acct(status.account)
          = fa_icon('lock') if status.account.locked?
  .status__content.emojify<
    - if status.spoiler_text?
      %p{ style: 'margin-bottom: 0' }<
        %span.p-summary> #{Formatter.instance.format_spoiler(status)}&nbsp;
        %a.status__content__spoiler-link{ href: '#' }= t('statuses.show_more')
    .e-content{ lang: status.language, style: "display: #{status.spoiler_text? ? 'none' : 'block'}; direction: #{rtl_status?(status) ? 'rtl' : 'ltr'}" }= Formatter.instance.format(status, custom_emojify: true)

  - unless status.media_attachments.empty?
    - if status.media_attachments.first.video?
      - video = status.media_attachments.first
      = react_component :video, src: video.file.url(:original), preview: video.file.url(:small), sensitive: status.sensitive? && !current_account&.user&.setting_display_sensitive_media, width: 610, height: 343, inline: true, alt: video.description
    - else
      = react_component :media_gallery, height: 343, sensitive: status.sensitive? && !current_account&.user&.setting_display_sensitive_media, 'autoPlayGif': current_account&.user&.setting_auto_play_gif, media: status.media_attachments.map { |a| ActiveModelSerializers::SerializableResource.new(a, serializer: REST::MediaAttachmentSerializer).as_json }

  .status__action-bar
    .status__action-bar__counter
      = link_to remote_interaction_path(status), class: 'status__action-bar-button icon-button modal-button', style: 'font-size: 18px; width: 23.1429px; height: 23.1429px; line-height: 23.15px;' do
        = fa_icon 'reply fw'
      .status__action-bar__counter__label= obscured_counter status.replies_count
    = link_to remote_interaction_path(status), class: 'status__action-bar-button icon-button modal-button', style: 'font-size: 18px; width: 23.1429px; height: 23.1429px; line-height: 23.15px;' do
      - if status.public_visibility? || status.unlisted_visibility?
        = fa_icon 'retweet fw'
      - elsif status.private_visibility?
        = fa_icon 'lock fw'
      - else
        = fa_icon 'envelope fw'
    = link_to remote_interaction_path(status), class: 'status__action-bar-button icon-button modal-button', style: 'font-size: 18px; width: 23.1429px; height: 23.1429px; line-height: 23.15px;' do
      = fa_icon 'star fw'
